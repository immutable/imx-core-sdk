/* tslint:disable */
/* eslint-disable */
/**
 * Immutable X API
 * Immutable X API
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ExperimentalCreatePrimarySaleParamsBodyFeesItems } from './experimental-create-primary-sale-params-body-fees-items';

/**
 * 
 * @export
 * @interface ExperimentalCreatePrimarySaleParamsBody
 */
export interface ExperimentalCreatePrimarySaleParamsBody {
    /**
     * Ethereum address of the payer of the primary sale
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'buyer_ether_key': string;
    /**
     * Stark key of the buyer
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'buyer_stark_key': string;
    /**
     * Vault ID of the buyer
     * @type {number}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'buyer_vault_id': number;
    /**
     * Time the primary sale expires
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'expiration_timestamp': string;
    /**
     * 
     * @type {Array<ExperimentalCreatePrimarySaleParamsBodyFeesItems>}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'fees'?: Array<ExperimentalCreatePrimarySaleParamsBodyFeesItems>;
    /**
     * Ethereum address of the items receiver
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'items_recipient_ether_key': string;
    /**
     * Nonce of transaction
     * @type {number}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'nonce': number;
    /**
     * Fee exclusive amount of the transfer
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'payment_amount': string;
    /**
     * Asset ID of payment token
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'payment_asset_id': string;
    /**
     * Ethereum address of the recipient of the sale proceedings
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'payment_recipient_ether_key': string;
    /**
     * Stark key of the payment receiver
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'payment_recipient_stark_key': string;
    /**
     * Vault ID of the payment receiver
     * @type {number}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'payment_recipient_vault_id': number;
    /**
     * StarkEx signature of the payload
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'stark_signature': string;
    /**
     * Arbitrary data defined by the selling party (e.g. game studio) to identify the primary sale. We suggest signing this payload to verify authenticity when processing.
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'studio_data': string;
    /**
     * Ethereum address of the studio operating the primary sale, will be used to verify in completion
     * @type {string}
     * @memberof ExperimentalCreatePrimarySaleParamsBody
     */
    'studio_ether_key': string;
}

